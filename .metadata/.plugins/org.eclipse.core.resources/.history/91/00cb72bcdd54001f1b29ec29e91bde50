/*
 * main_app.h
 *
 *  Created on: Aug 6, 2024
 *      Author: adith
 */

#ifndef MAIN_APP_INCLUDES_MAIN_APP_H_
#define MAIN_APP_INCLUDES_MAIN_APP_H_

#include "main.h"

// Peripheral Handles
extern ADC_HandleTypeDef hadc1;

extern DAC_HandleTypeDef hdac;

extern I2C_HandleTypeDef hi2c1;
extern I2C_HandleTypeDef hi2c3;

extern SPI_HandleTypeDef hspi3;

extern TIM_HandleTypeDef htim1;
extern TIM_HandleTypeDef htim2;
extern TIM_HandleTypeDef htim4;
extern TIM_HandleTypeDef htim9;

extern UART_HandleTypeDef huart4;
extern UART_HandleTypeDef huart1;
extern UART_HandleTypeDef huart2;

extern PCD_HandleTypeDef hpcd_USB_OTG_HS;


// State machine states
typedef enum{
	ST_INIT,
	ST_STARTUP,
	ST_HOMEMENU,
	ST_ERROR
}MACHINE_STATE_t;

// State machine trigger events
typedef enum{
	NO_EVENT = 0,
	EVENT_INIT_COMPLETE,
	EVENT_STARTUP_COMPLETE,
	EVENT_STARTUP_FAILED
}MACHINE_EVENT_t;

// State struct
typedef struct
{
    void (*stStateFcn)(void);
} STATE_ARRAY_t;

// State transition struct
typedef struct
{
    MACHINE_STATE_t eCurrState;
    MACHINE_EVENT_t eEvent;
    MACHINE_STATE_t eNextState;
} STATE_TRANSITION_t;

// State array for function pointers
const STATE_ARRAY_t StateArray[] = {
		{ stateIdle },
		{ stateStartUp },
		{ stateHomeMenu },
		{ stateError }
};

const STATE_TRANSITION_t StateTransition[] = {
    /* Current State */    /* Event */                 /* Next State */
    { ST_INIT,             NO_EVENT,                   ST_INIT             },
    { ST_INIT,             EVENT_INIT_COMPLETE,	       ST_STARTUP          },

    { ST_IDLE,             NO_EVENT,                   ST_IDLE             },
    { ST_IDLE,             EVENT_STARTUP_COMPLETE,     ST_HOMEMENU         },
    { ST_IDLE,             EVENT_STARTUP_FAILED,       ST_ERROR            },

    { ST_STARTUP,          NO_EVENT,                   ST_STARTUP          },
    { ST_STARTUP,          EVENT_STARTUP_COMPLETE,     ST_HOMEMENU         },
    { ST_STARTUP,          EVENT_STARTUP_FAILED,       ST_ERROR            },

    { ST_HOMEMENU,         NO_EVENT,                   ST_HOMEMENU         },
    { ST_HOMEMENU,         EVENT_STARTUP_COMPLETE,     ST_HOMEMENU         },
    { ST_HOMEMENU,         EVENT_STARTUP_FAILED,       ST_ERROR            },

    { ST_ERROR,            NO_EVENT,                   ST_ERROR            }
};

// State Functions
void stateIdle(void);
void stateStartUp(void);
void stateHomeMenu(void);
void stateError(void);


// Main loop
void main_app(void);


#endif /* MAIN_APP_INCLUDES_MAIN_APP_H_ */
